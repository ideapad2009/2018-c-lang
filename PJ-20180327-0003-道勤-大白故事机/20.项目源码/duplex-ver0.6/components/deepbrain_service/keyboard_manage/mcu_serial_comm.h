#ifndef __MCU_SERIAL_COMM_H__
#define __MCU_SERIAL_COMM_H__
#include <stdio.h>

typedef enum  
{
	DEVICE_NOTIFY_KEY_START = 0,

	//K1
	DEVICE_NOTIFY_KEY_K1_TAP,
	DEVICE_NOTIFY_KEY_K1_PUSH,
	DEVICE_NOTIFY_KEY_K1_RELEASE,
	DEVICE_NOTIFY_KEY_K1_LONGPRESSED,

	//K2
	DEVICE_NOTIFY_KEY_K2_TAP,
	DEVICE_NOTIFY_KEY_K2_PUSH,
	DEVICE_NOTIFY_KEY_K2_RELEASE,
	DEVICE_NOTIFY_KEY_K2_LONGPRESSED,

	//K3
	DEVICE_NOTIFY_KEY_K3_TAP,
	DEVICE_NOTIFY_KEY_K3_PUSH,
	DEVICE_NOTIFY_KEY_K3_RELEASE,
	DEVICE_NOTIFY_KEY_K3_LONGPRESSED,

	//K4
	DEVICE_NOTIFY_KEY_K4_TAP,
	DEVICE_NOTIFY_KEY_K4_PUSH,
	DEVICE_NOTIFY_KEY_K4_RELEASE,
	DEVICE_NOTIFY_KEY_K4_LONGPRESSED,

	//K5
	DEVICE_NOTIFY_KEY_K5_TAP,
	DEVICE_NOTIFY_KEY_K5_PUSH,
	DEVICE_NOTIFY_KEY_K5_RELEASE,
	DEVICE_NOTIFY_KEY_K5_LONGPRESSED,

	//K6
	DEVICE_NOTIFY_KEY_K6_TAP,
	DEVICE_NOTIFY_KEY_K6_PUSH,
	DEVICE_NOTIFY_KEY_K6_RELEASE,
	DEVICE_NOTIFY_KEY_K6_LONGPRESSED,

	//K7
	DEVICE_NOTIFY_KEY_K7_TAP,
	DEVICE_NOTIFY_KEY_K7_PUSH,
	DEVICE_NOTIFY_KEY_K7_RELEASE,
	DEVICE_NOTIFY_KEY_K7_LONGPRESSED,

	//K8
	DEVICE_NOTIFY_KEY_K8_TAP,
	DEVICE_NOTIFY_KEY_K8_PUSH,
	DEVICE_NOTIFY_KEY_K8_RELEASE,
	DEVICE_NOTIFY_KEY_K8_LONGPRESSED,

	//K9
	DEVICE_NOTIFY_KEY_K9_TAP,
	DEVICE_NOTIFY_KEY_K9_PUSH,
	DEVICE_NOTIFY_KEY_K9_RELEASE,
	DEVICE_NOTIFY_KEY_K9_LONGPRESSED,

	//K10
	DEVICE_NOTIFY_KEY_K10_TAP,
	DEVICE_NOTIFY_KEY_K10_PUSH,
	DEVICE_NOTIFY_KEY_K10_RELEASE,
	DEVICE_NOTIFY_KEY_K10_LONGPRESSED,
	
	DEVICE_NOTIFY_KEY_END,
}DEVICE_NOTIFY_KEY_T;


typedef void (* mcu_key_cb)(DEVICE_NOTIFY_KEY_T _key_event);
typedef void (* mcu_battery_cb)(float _battery_vol);

void mcu_serial_comm_create(mcu_key_cb _key_cb, mcu_battery_cb _battery_cb);
void keyboard_lock_init(void);
int keyboard_lock(void);
void keyboard_unlock(void);
int keyboard_lock_status(void);

#endif


