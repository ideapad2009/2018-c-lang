C51 COMPILER V9.52.0.0   FSYS_SEL                                                          02/09/2017 16:31:07 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE FSYS_SEL
OBJECT MODULE PLACED IN .\Output\Fsys_SEL.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Fsys_SEL.c OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_
                    -160000) DEBUG OBJECTEXTEND PRINT(.\LST\Fsys_SEL.lst) TABS(2) OBJECT(.\Output\Fsys_SEL.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 System clock select demo code
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "Delay.h"
  21          
  22          //========================================================================
  23          //  The test process:
  24          //  1. Power on is run as default HIRC, show LED Fsys tickle faster
  25          //  2. toggle P3.0 to GND.
  26          //  2. call modify Fsys code to LIRC.
  27          //  3. LED tickle speed slowly than before.
  28          //========================================================================
  29          void main(void)
  30          {
  31   1      
  32   1      /* Note
  33   1        MCU power on system clock is HIRC (16 MHz)
  34   1        Please keep P3.0 HIGH before you want to modify Fsys to LIRC
  35   1      */
  36   1        
  37   1          Set_All_GPIO_Quasi_Mode;                    // In Common.h define
  38   1          set_CLOEN;                                  // Also can check P1.1 CLO pin for clock to find the Fsys change.
  39   1          set_P30;
  40   1          while (P30)                                 // when P3.0 keep high, clock out HIRC
  41   1          {   
  42   2              clr_GPIO1;                              // Check LED output tickle time
  43   2              Timer0_Delay1ms(200);
  44   2              set_GPIO1;
  45   2              Timer0_Delay1ms(200);
C51 COMPILER V9.52.0.0   FSYS_SEL                                                          02/09/2017 16:31:07 PAGE 2   

  46   2          }
  47   1        
  48   1      ////------------------------------------------------------------------------------------------------------
  49   1      ///*********************************** Change system closk source ***************************************/
  50   1      ////------------------------------------------------------------------------------------------------------
  51   1                    
  52   1      ////***** HIRC enable part *****               
  53   1      //    set_HIRCEN;                       //step1: enable HIRC clock source run
  54   1      //    while((CKSWT&SET_BIT5)==0);       //step2: check ready
  55   1      //    clr_OSC1;                         //step3: switching system clock source if needed
  56   1      //    clr_OSC0;
  57   1      //    while((CKEN&SET_BIT0)==1);        //step4: check system clock switching OK or NG
  58   1      //
  59   1      ////***** LIRC enable part*****
  60   1      ////** Since LIRC is always enable, switch to LIRC directly
  61   1          set_OSC1;                         //step3: switching system clock source if needed
  62   1          clr_OSC0;  
  63   1          while((CKEN&SET_BIT0)==1);        //step4: check system clock switching OK or NG  
  64   1          clr_HIRCEN;
  65   1         
  66   1      ////------------------------------------------------------------------------------------------------------
             ---
  67   1          
  68   1      /*
  69   1        Now Fsys = LIRC , LED tickle slowly.
  70   1      */
  71   1          while(1)
  72   1          {
  73   2              clr_GPIO1;                              // Check LED output tickle time
  74   2              Timer0_Delay1ms(20);
  75   2              set_GPIO1;
  76   2              Timer0_Delay1ms(20);
  77   2          }
  78   1      /* =================== */
  79   1      }
  80          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
