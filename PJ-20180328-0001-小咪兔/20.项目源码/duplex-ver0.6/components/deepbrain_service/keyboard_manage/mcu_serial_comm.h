#ifndef __MCU_SERIAL_COMM_H__
#define __MCU_SERIAL_COMM_H__
#include <stdio.h>

typedef enum  
{
	DEVICE_NOTIFY_KEY_START = 0,
	DEVICE_NOTIFY_KEY_CHAT_TAP,
	DEVICE_NOTIFY_KEY_CHAT_PUSH,
	DEVICE_NOTIFY_KEY_CHAT_RELEASE,
	DEVICE_NOTIFY_KEY_CHAT_LONGPRESSED,

	DEVICE_NOTIFY_KEY_LED_TAP,
	DEVICE_NOTIFY_KEY_LED_PUSH,
	DEVICE_NOTIFY_KEY_LED_RELEASE,
	DEVICE_NOTIFY_KEY_LED_LONGPRESSED,

	DEVICE_NOTIFY_KEY_VOL_UP_TAP,
	DEVICE_NOTIFY_KEY_VOL_UP_PUSH,
	DEVICE_NOTIFY_KEY_VOL_UP_RELEASE,
	DEVICE_NOTIFY_KEY_VOL_UP_LONGPRESSED,

	DEVICE_NOTIFY_KEY_VOL_DOWN_TAP,
	DEVICE_NOTIFY_KEY_VOL_DOWN_PUSH,
	DEVICE_NOTIFY_KEY_VOL_DOWN_RELEASE,
	DEVICE_NOTIFY_KEY_VOL_DOWN_LONGPRESSED,

	DEVICE_NOTIFY_KEY_MENU_TAP,
	DEVICE_NOTIFY_KEY_MENU_PUSH,
	DEVICE_NOTIFY_KEY_MENU_RELEASE,
	DEVICE_NOTIFY_KEY_MENU_LONGPRESSED,

	DEVICE_NOTIFY_KEY_PREV_TAP,
	DEVICE_NOTIFY_KEY_PREV_PUSH,
	DEVICE_NOTIFY_KEY_PREV_RELEASE,
	DEVICE_NOTIFY_KEY_PREV_LONGPRESSED,

	DEVICE_NOTIFY_KEY_PLAY_TAP,
	DEVICE_NOTIFY_KEY_PLAY_PUSH,
	DEVICE_NOTIFY_KEY_PLAY_RELEASE,
	DEVICE_NOTIFY_KEY_PLAY_LONGPRESSED,

	DEVICE_NOTIFY_KEY_NEXT_TAP,
	DEVICE_NOTIFY_KEY_NEXT_PUSH,
	DEVICE_NOTIFY_KEY_NEXT_RELEASE,
	DEVICE_NOTIFY_KEY_NEXT_LONGPRESSED,

	DEVICE_NOTIFY_KEY_STORY_TAP,
	DEVICE_NOTIFY_KEY_STORY_PUSH,
	DEVICE_NOTIFY_KEY_STORY_RELEASE,
	DEVICE_NOTIFY_KEY_STORY_LONGPRESSED,

	DEVICE_NOTIFY_KEY_FW_UPDATE_TAP,
	DEVICE_NOTIFY_KEY_FW_UPDATE_PUSH,
	DEVICE_NOTIFY_KEY_FW_UPDATE_RELEASE,
	DEVICE_NOTIFY_KEY_FW_UPDATE_LONGPRESSED,
	DEVICE_NOTIFY_KEY_END,
}DEVICE_NOTIFY_KEY_T;


typedef void (* mcu_key_cb)(DEVICE_NOTIFY_KEY_T _key_event);
typedef void (* mcu_battery_cb)(float _battery_vol);

void mcu_serial_comm_create(mcu_key_cb _key_cb, mcu_battery_cb _battery_cb);
void keyboard_lock_init(void);
int keyboard_lock(void);
void keyboard_unlock(void);
int keyboard_lock_status(void);

#endif


